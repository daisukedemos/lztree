/* 
 *  Copyright (c) 2012 Daisuke Okanohara
 * 
 *   Redistribution and use in source and binary forms, with or without
 *   modification, are permitted provided that the following conditions
 *   are met:
 * 
 *   1. Redistributions of source code must retain the above Copyright
 *      notice, this list of conditions and the following disclaimer.
 *
 *   2. Redistributions in binary form must reproduce the above Copyright
 *      notice, this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *
 *   3. Neither the name of the authors nor the names of its contributors
 *      may be used to endorse or promote products derived from this
 *      software without specific prior written permission.
 */

def options(ctx):
  pass
    
def configure(ctx):
  pass

def build(bld):
  bld.shlib(
       source       = 'BitVec.cpp Level.cpp Queue.cpp FixedArray.cpp LZTree.cpp',
       target       = 'lztree',
       name         = 'LZTREE',
       includes     = '.')
  bld.program(
       features     = 'gtest',
       source       = 'FixedArrayTest.cpp FixedArray.cpp',
       target       = 'fixedarray_test',
       use          = '',
       includes     = '.')
  bld.program(
       features     = 'gtest',
       source       = 'BitVecTest.cpp BitVec.cpp',
       target       = 'bitvec_test',
       use          = '',
       includes     = '.')
  bld.program(
       features     = 'gtest',
       source       = 'LZTreeTest.cpp',
       target       = 'lztree_test',
       use          = 'LZTREE',
       includes     = '.')

  bld.install_files('${PREFIX}/include/lztree', bld.path.ant_glob('*.hpp'))
